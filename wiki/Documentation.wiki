#summary Explanation for all supported parameters and methods
#labels Featured

<wiki:gadget url="https://jqueryrotate.googlecode.com/svn/trunk/adsense_gadget.xml" width="0" height="0" border="0"/>

<wiki:gadget url="http://jqueryrotate.googlecode.com/svn/trunk/adv_gadget.xml" width="780" height="35" border="0" up_frm="adv2.html"/>
<wiki:gadget url="http://jqueryrotate.googlecode.com/svn/trunk/adv_gadget.xml" width="780" height="110" border="0" up_frm="adv1.html"/>

= rotate(angle) =

 == angle ==
 `[Number]` - default 0 - Simply rotates given image by a given angle

 Example:
 {{{ 
   $("#img").rotate(45);
 }}}

 <wiki:gadget url="http://jqueryrotate.googlecode.com/svn/trunk/rotate.xml" width="55" height="55" border="0" up_image="https://jqueryrotate.googlecode.com/svn/trunk/arrow.png" up_func="{angle:45}"/>

= rotate(parameters) =

== parameters ==
 `[Object]` Object containing parameters for rotation. Supported attributes:

      * === angle===
 <p>
  `[Number]` - default 0 - Angle value in degrees of  an rotation to be executed immediately

    Example:
{{{
$("#img").rotate({angle:45});
}}}
  <wiki:gadget url="http://jqueryrotate.googlecode.com/svn/trunk/rotate.xml" width="55" height="55" border="0" up_image="https://jqueryrotate.googlecode.com/svn/trunk/arrow.png" up_func="{angle:45}"/>

 </p>

      * === bind ===
 <p>
  `[Object]` Object containing events to bind on to a rotation object. $(this) inside events points to a rotation object - this way you can chain execution of rotations - $(this).rotate(...)

    Example (click on arrow):
{{{
$("#img").rotate({bind:{
      click: function(){
          $(this).rotate({
            angle: 0, 
            animateTo:180
          })
      }
  }
});
}}}
  <wiki:gadget url="http://jqueryrotate.googlecode.com/svn/trunk/rotate.xml" width="55" height="55" border="0" up_image="https://jqueryrotate.googlecode.com/svn/trunk/arrow.png" up_func="{bind:{click:function(){  $(this).rotate({angle: 0, animateTo:180})}}}"/>

 </p>

      * === animateTo ===
 <p>
  `[Number]` - default 0 - Angle value in degrees of  an rotation to be animated to from current angle value (or given angle parameter)

    Example:
  See <i> bind </i> example above to see usage.

 </p>



      * === duration===
 <p>
  `[Number]` - default 1000 - Specifies a duration of a animation when using animateTo action

    Example (click on arrow):
{{{
$("#img").rotate({bind:{
      click: function(){
          $(this).rotate({
            duration:6000,
            angle: 0, 
            animateTo:100
          })
      }
  }
});
}}}
  <wiki:gadget url="http://jqueryrotate.googlecode.com/svn/trunk/rotate.xml" width="55" height="55" border="0" up_image="https://jqueryrotate.googlecode.com/svn/trunk/arrow.png" up_func="{bind:{click:function(){  $(this).rotate({angle: 0, duration: 6000, animateTo:180})}}}"/>
 </p>

      * === step===
 <p>
  `[Function]` - default null - A function that will be executed on every animation step. As a first argument a current angle is given.

 </p>

      * === easing===
 <p>
  `[Function]` - default (see below) - Easing function used to make animation look more natural. It takes five parameters (x,t,b,c,d) to support easing from http://gsgd.co.uk/sandbox/jquery/easing/ (for more details please see documentation at their website). Remember to include easing plugin before using it in jQueryRotate!

   Default function:
{{{
   function (x, t, b, c, d) { return -c * ((t=t/d-1)*t*t*t - 1) + b; }
}}}

   Where:
   * t: current time, 
   * b: begInnIng value,
   * c: change In value, 
   * d: duration,
   * x: unused

No easing (linear easing): 
{{{
   function(x, t, b, c, d) { return b+(t/d)*c ; }
}}}


    Example (click on arrow):
{{{
$("#img").rotate({bind:{
      click: function(){
          $(this).rotate({
            angle: 0, 
            animateTo:180,
            easing: $.easing.easeInOutElastic
          })
      }
  }
});
}}}
  <wiki:gadget url="http://jqueryrotate.googlecode.com/svn/trunk/rotate.xml" width="55" height="55" border="0" up_image="https://jqueryrotate.googlecode.com/svn/trunk/arrow.png" up_func="{bind:{click:function(){  $(this).rotate({angle: 0, animateTo:180,easing:$.easing.easeInOutElastic})}}}"/>
 </p>



      * === callback ===
 <p>
  `[Function]` A function to be called when animation finishes.

    Example (click on arrow):
{{{
$("#img").rotate({bind:{
      click: function(){
          $(this).rotate({
            angle: 0, 
            animateTo:180,
            callback: function(){   alert(1)  }
          })
      }
  }
});
}}}
  <wiki:gadget url="http://jqueryrotate.googlecode.com/svn/trunk/rotate.xml" width="55" height="55" border="0" up_image="https://jqueryrotate.googlecode.com/svn/trunk/arrow.png" up_func="{bind:{click:function(){  $(this).rotate({angle: 0, animateTo:180,callback:function(){alert(1)}})}}}"/>

 </p>

= getRotateAngle =

 This function simply returns current angle of rotated object.

 Example:
 {{{ 
   $("#img").rotate({
        angle: 45, 
        bind: {
            click : function(){
               alert($(this).getRotateAngle());
            }
        }
   });
 }}}

  <wiki:gadget url="http://jqueryrotate.googlecode.com/svn/trunk/rotate.xml" width="55" height="55" border="0" up_image="https://jqueryrotate.googlecode.com/svn/trunk/arrow.png" up_func="{angle:45, bind:{click:function(){  alert($(this).getRotateAngle()) }}}"/>

= stopRotate = 
 
 This function simply stops ongoing rotate animation.
 
 Example: 
 {{{
   $("#img").rotate({
        bind: {
            click: function(){
                      $("#img").rotate({
                          angle: 0,
                          animateTo: 180,
                          duration: 6000
                      });
                      setTimeout(function(){
                          $("#img").stopRotate();
                      }, 1000);
            }
       }
   });
 }}}

  <wiki:gadget url="http://jqueryrotate.googlecode.com/svn/trunk/rotate.xml" width="55" height="55" border="0" up_image="https://jqueryrotate.googlecode.com/svn/trunk/arrow.png" up_func="{bind:{click:function(){  $(this).rotate({angle: 0, animateTo:180,duration:6000}); setTimeout($.proxy(function(){$(this).stopRotate()},this),1000)}}}"/>


See live example here: http://jsfiddle.net/xJnqM/



If you're interested in more examples please go here: [Examples]
<wiki:gadget url="http://jqueryrotate.googlecode.com/svn/trunk/adv_gadget.xml" width="780" height="35" border="0" up_frm="adv2.html"/>